{"version":3,"sources":["webpack://Reverb/webpack/universalModuleDefinition","webpack://Reverb/webpack/bootstrap","webpack://Reverb/./src/meta.js","webpack://Reverb/./src/reverb.js"],"names":["Meta","version","date","Reverb","ctx","options","build","wetGainNode","createGain","dryGainNode","filterNode","createBiquadFilter","convolverNode","createConvolver","outputNode","_decay","decay","_delay","delay","_reverse","reverse","_time","time","_filterType","filterType","_freq","filterFreq","_q","filterQ","_mix","mix","isConnected","buildImpulse","sourceNode","connect","disconnect","e","inRange","console","warn","gain","value","info","type","freq","frequency","q","Q","x","min","max","rate","sampleRate","length","Math","delayDuration","impulse","createBuffer","impulseL","Float32Array","impulseR","i","n","pow","getNoise","getChannelData","set","buffer","random"],"mappings":"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","file":"reverb.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Reverb\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Reverb\"] = factory();\n\telse\n\t\troot[\"Reverb\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/reverb.js\");\n","// This file is auto-generated by the build system.\nconst Meta = {\n  version: '0.2.1',\n  date: '2019-12-26T15:48:03.337Z',\n};\nexport default Meta;\n","import Meta from './meta';\n/**\n * JS reverb effect class\n *\n * @author    Logue <logue@hotmail.co.jp>\n * @copyright 2019 Masashi Yoshikawa <https://logue.dev/> All rights reserved.\n * @license   MIT\n * @see       {@link https://github.com/logue/Reverb.js}\n *            {@link https://github.com/web-audio-components/simple-reverb}\n */\nexport default class Reverb {\n  /**\n   * constructor\n   * @param {AudioContext} ctx\n   * @param {{\n   *   decay: (number|undefined),\n   *   delay: (number|undefined),\n   *   filterFreq: (number|undefined),\n   *   filterQ: (number|undefined),\n   *   filterType: (string|undefined),\n   *   mix: (number|undefined),\n   *   reverse: (boolean|undefined),\n   *   time: (number|undefined)\n   * }} options\n   */\n  constructor(ctx, options = {}) {\n    /** @type {number} バージョン */\n    this.version = Meta.version;\n    /** @type {Date} ビルド日時 */\n    this.build = Meta.date;\n    /** @type {AudioContext} */\n    this.ctx = ctx;\n    /** @type {GainNode} ウェットレベル */\n    this.wetGainNode = this.ctx.createGain();\n    /** @type {GainNode} ドライレベル */\n    this.dryGainNode = this.ctx.createGain();\n    /** @type {BiquadFilterNode} インパルス応答用フィルタ */\n    this.filterNode = this.ctx.createBiquadFilter();\n    /** @type {ConvolverNode} 畳み込みノード */\n    this.convolverNode = this.ctx.createConvolver();\n    /** @type {GainNode} 出力ノード */\n    this.outputNode = this.ctx.createGain();\n\n    // デフォルト値\n    /** @type {number} ディケイ */\n    this._decay = options.decay | 0 || 5;\n    /** @type {number} ディレイ */\n    this._delay = options.delay | 0 || 0;\n    /** @type {boolean} レスポンス応答を反転 */\n    this._reverse = options.reverse || false;\n    /** @type {number} レスポンス応答の時間（秒） */\n    this._time = options.time | 0 || 3;\n    /** @type {BiquadFilterNode|null} フィルタの種類 */\n    this._filterType = options.filterType || 'lowpass';\n    /** @type {number} フィルタ周波数(Hz) */\n    this._freq = options.filterFreq | 0 || 2200;\n    /** @type {number} フィルタ品質 */\n    this._q = options.filterQ | 0 || 1;\n    /** @type {number} ドライ／ウェット比 */\n    this._mix = options.mix || 0.5;\n\n    // 値をセット\n    this.time(this._time);\n    this.delay(this._delay);\n    this.decay(this._decay);\n    this.reverse(this._reverse);\n\n    // エフェクタに反映\n    this.filterType(this._filterType);\n    this.filterFreq(this._freq);\n    this.filterQ(this._q);\n\n    this.mix(this._mix);\n\n    /** @type {bool} 接続済みフラグ */\n    this.isConnected = false;\n\n    this.buildImpulse();\n  }\n\n  /**\n   * connect\n   * @param {GainNode} sourceNode\n   * @return {GainNode}\n   */\n  connect(sourceNode) {\n    this.isConnected = true;\n    // 畳み込みノードをウェットレベルに接続\n    this.convolverNode.connect(this.filterNode);\n    // フィルタノードをウェットレベルに接続\n    this.filterNode.connect(this.wetGainNode);\n    // 入力ノードを畳み込みノードに接続\n    sourceNode.connect(this.convolverNode);\n    // ドライレベルを出力ノードに接続\n    sourceNode.connect(this.dryGainNode).connect(this.outputNode);\n    // ウェットレベルを出力ノードに接続\n    sourceNode.connect(this.wetGainNode).connect(this.outputNode);\n    return this.outputNode;\n  }\n\n  /**\n   * disconnect\n   * @param {GainNode} sourceNode\n   * @return {GainNode}\n   */\n  disconnect(sourceNode) {\n    // 初期状態で接続されていない可能性があるためエラーを消す\n    try {\n      // 畳み込みノードをウェットレベルから切断\n      this.convolverNode.disconnect(this.filterNode);\n      // フィルタノードをウェットレベルから切断\n      this.filterNode.disconnect(this.wetGainNode);\n      // 入力ノードを畳み込みノードから切断\n      sourceNode.disconnect(this.convolverNode);\n      // ドライレベルを出力ノードから切断\n      sourceNode.disconnect(this.dryGainNode).disconnect(this.outputNode);\n      // ウェットレベルを出力ノードから切断\n      sourceNode.disconnect(this.wetGainNode).disconnect(this.outputNode);\n    } catch (e) { }\n    this.isConnected = false;\n    return sourceNode;\n  }\n\n  /**\n   * Mixing Dry and Wet Level.\n   * @param {number} mix\n   */\n  mix(mix) {\n    if (!this.inRange(mix, 0, 1)) {\n      console.warn('Dry/Wet level must be between 0 to 1.');\n      return;\n    }\n    this._mix = mix;\n    this.dryGainNode.gain.value = (1 - this._mix);\n    this.wetGainNode.gain.value = this._mix;\n    console.info(`Set dry/wet level to ${mix * 100}%`);\n  }\n\n  /**\n   * Set Impulse Response time length (second)\n   * @param {number} value\n   */\n  time(value) {\n    if (!this.inRange(value, 1, 50)) {\n      console.warn('Time length of inpulse response must be less than 50sec.');\n      return;\n    }\n    this._time = value;\n    this.buildImpulse();\n    console.info(`Set inpulse response time length to ${value}sec.`);\n  }\n\n  /**\n   * Impulse response decay rate.\n   * @param {number} value\n   */\n  decay(value) {\n    if (!this.inRange(value, 0, 100)) {\n      console.warn('Inpulse Response decay level must be less than 100.');\n      return;\n    }\n    this._decay = value;\n    this.buildImpulse();\n    console.info(`Set inpulse response decay level to ${value}.`);\n  }\n\n  /**\n   * Impulse response delay time. (NOT deley effect)\n   * @param {number} value\n   */\n  delay(value) {\n    if (!this.inRange(value, 0, 100)) {\n      console.warn('Inpulse Response delay time must be less than 100.');\n      return;\n    }\n    this._delay = value;\n    this.buildImpulse();\n    console.info(`Set inpulse response delay time to ${value}sec.`);\n  }\n\n  /**\n   * Reverse the impulse response.\n   * @param {boolean} reverse\n   */\n  reverse(reverse) {\n    this._reverse = reverse;\n    this.buildImpulse();\n    console.info(`Inpulse response is ${reverse ? '' : 'not '}reversed.`);\n  }\n\n  /**\n   * Filter type.\n   * @param {BiquadFilterNode|null} type\n   */\n  filterType(type) {\n    this.filterNode.type = this._filterType = type;\n    console.info(`Set filter type to ${type}`);\n  }\n\n  /**\n   * Filter frequency.\n   * @param {number} freq\n   */\n  filterFreq(freq) {\n    if (!this.inRange(freq, 20, 5000)) {\n      console.warn('Filter frequrncy must be between 20 and 5000.');\n      return;\n    }\n    this._freq = freq;\n    this.filterNode.frequency.value = this._freq;\n    console.info(`Set filter frequency to ${freq}Hz.`);\n  }\n\n  /**\n   * Filter quality.\n   * @param {number} q\n   */\n  filterQ(q) {\n    if (!this.inRange(q, 0, 10)) {\n      console.warn('Filter quality value must be between 0 and 1.');\n      return;\n    }\n    this._q = q;\n    this.filterNode.Q.value = this._q;\n    console.info(`Set filter quality to ${q}.`);\n  }\n\n  /**\n   * return true if in range, otherwise false\n   * @private\n   * @param {number} x Target value\n   * @param {number} min Minimum value\n   * @param {number} max Maximum value\n   * @return {bool}\n   */\n  inRange(x, min, max) {\n    return ((x - min) * (x - max) <= 0);\n  }\n\n  /**\n   * Utility function for building an impulse response\n   * from the module parameters.\n   * @private\n   */\n  buildImpulse() {\n    // インパルス応答生成ロジック\n    /** @type {number} サンプリングレート */\n    const rate = this.ctx.sampleRate;\n    /** @type {number} インパルス応答の演奏時間 */\n    const length = Math.max(rate * this._time, 1);\n    /** @type {number} インパルス応答が始まるまでの遅延時間 */\n    const delayDuration = rate * this._delay;\n    /** @type {AudioBuffer} インパルス応答バッファ（今の所ステレオのみ） */\n    const impulse = this.ctx.createBuffer(2, length, rate);\n    /** @type {Array<number>|ArrayBufferView} 左チャンネル */\n    const impulseL = new Float32Array(length);\n    /** @type {Array<number>|ArrayBufferView} 右チャンネル*/\n    const impulseR = new Float32Array(length);\n\n    for (let i = 0; i < length; i++) {\n      /** @type {number} */\n      let n = 0;\n\n      if (i < delayDuration) {\n        // Delay Effect\n        impulseL[i] = 0;\n        impulseR[i] = 0;\n        n = this._reverse ? length - (i - delayDuration) : i - delayDuration;\n      } else {\n        n = this._reverse ? length - i : i;\n      }\n\n      /** @type {number} 平方根を利用した減衰曲線 */\n      const pow = (1 - n / length) ** this._decay;\n      impulseL[i] = this.getNoise(pow);\n      impulseR[i] = this.getNoise(pow);\n    }\n\n    // インパルス応答のバッファに生成したWaveTableを代入\n    impulse.getChannelData(0).set(impulseL);\n    impulse.getChannelData(1).set(impulseR);\n\n    this.convolverNode.buffer = impulse;\n  }\n  /**\n   * Generate white noise\n   * @param {number} rate Attenuation rate\n   * @return {number}\n   * @private\n   */\n  getNoise(rate) {\n    // TODO: 他のカラードノイズを指定できるように\n    return (Math.random() * 2 - 1) * rate;\n  }\n};\n"],"sourceRoot":""}