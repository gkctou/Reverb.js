/*! For license information please see reverb.min.js.LICENSE */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("Reverb",[],t):"object"==typeof exports?exports.Reverb=t():e.Reverb=t()}("undefined"!=typeof self?self:this,(function(){return function(e){var t={};function i(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=1)}([function(e,t,i){"use strict";t.a={version:"0.2.1",date:"2019-12-26T15:45:47.820Z"}},function(e,t,i){"use strict";i.r(t),i.d(t,"default",(function(){return o}));var n=i(0);function r(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var o=function(){function e(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.version=n.a.version,this.build=n.a.date,this.ctx=t,this.wetGainNode=this.ctx.createGain(),this.dryGainNode=this.ctx.createGain(),this.filterNode=this.ctx.createBiquadFilter(),this.convolverNode=this.ctx.createConvolver(),this.outputNode=this.ctx.createGain(),this._decay=0|i.decay||5,this._delay=0|i.delay||0,this._reverse=i.reverse||!1,this._time=0|i.time||3,this._filterType=i.filterType||"lowpass",this._freq=0|i.filterFreq||2200,this._q=0|i.filterQ||1,this._mix=i.mix||.5,this.time(this._time),this.delay(this._delay),this.decay(this._decay),this.reverse(this._reverse),this.filterType(this._filterType),this.filterFreq(this._freq),this.filterQ(this._q),this.mix(this._mix),this.isConnected=!1,this.buildImpulse()}var t,i,o;return t=e,(i=[{key:"connect",value:function(e){return this.isConnected=!0,this.convolverNode.connect(this.filterNode),this.filterNode.connect(this.wetGainNode),e.connect(this.convolverNode),e.connect(this.dryGainNode).connect(this.outputNode),e.connect(this.wetGainNode).connect(this.outputNode),this.outputNode}},{key:"disconnect",value:function(e){try{this.convolverNode.disconnect(this.filterNode),this.filterNode.disconnect(this.wetGainNode),e.disconnect(this.convolverNode),e.disconnect(this.dryGainNode).disconnect(this.outputNode),e.disconnect(this.wetGainNode).disconnect(this.outputNode)}catch(e){}return this.isConnected=!1,e}},{key:"mix",value:function(e){this.inRange(e,0,1)&&(this._mix=e,this.dryGainNode.gain.value=1-this._mix,this.wetGainNode.gain.value=this._mix)}},{key:"time",value:function(e){this.inRange(e,1,50)&&(this._time=e,this.buildImpulse())}},{key:"decay",value:function(e){this.inRange(e,0,100)&&(this._decay=e,this.buildImpulse())}},{key:"delay",value:function(e){this.inRange(e,0,100)&&(this._delay=e,this.buildImpulse())}},{key:"reverse",value:function(e){this._reverse=e,this.buildImpulse()}},{key:"filterType",value:function(e){this.filterNode.type=this._filterType=e}},{key:"filterFreq",value:function(e){this.inRange(e,20,5e3)&&(this._freq=e,this.filterNode.frequency.value=this._freq)}},{key:"filterQ",value:function(e){this.inRange(e,0,10)&&(this._q=e,this.filterNode.Q.value=this._q)}},{key:"inRange",value:function(e,t,i){return(e-t)*(e-i)<=0}},{key:"buildImpulse",value:function(){for(var e=this.ctx.sampleRate,t=Math.max(e*this._time,1),i=e*this._delay,n=this.ctx.createBuffer(2,t,e),r=new Float32Array(t),o=new Float32Array(t),s=0;s<t;s++){var a=0;s<i?(r[s]=0,o[s]=0,a=this._reverse?t-(s-i):s-i):a=this._reverse?t-s:s;var u=Math.pow(1-a/t,this._decay);r[s]=this.getNoise(u),o[s]=this.getNoise(u)}n.getChannelData(0).set(r),n.getChannelData(1).set(o),this.convolverNode.buffer=n}},{key:"getNoise",value:function(e){return(2*Math.random()-1)*e}}])&&r(t.prototype,i),o&&r(t,o),e}()}])}));